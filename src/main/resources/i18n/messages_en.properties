spring.title.page = Spring Application
spring.header.big.title = Sample application in SpringBoot
spring.header.small.title = The purpose of this project is to present a simple CRUD for one or two related entities
spring.header.intro = I will use the authentication system available in the Spring framework with custom login elements, namely \
  defining the entity used for authentication and a custom login form.
spring.menu.description = Menu
spring.menu.add.user = Add user
spring.menu.home = Main page
spring.menu.login.user = Login
spring.content.big.title = Web application using the Spring and SpringBoot framework
spring.content.big.text = The application uses the JPA implementation provided by Hibernate for ORM mapping and the Thymeleaf view engine. As a web container it uses the Tomcat server, which is included in \
via SpringBoot. The data is stored in the MySQL relational database, version 8.0.19. In order to configure the application's connection to the database, I used the Tomcat container connection pool. \
  The application uses the internationalization mechanism, has two built-in message sets, in Polish and English. I also used the Bootstrap 4 framework to format the view pages.
spring.footer = &copy; All rights reserved Radosław Kuświk.
spring.content.big.add.user.title = Add user page
spring.content.big.add.user.name = Enter your name:
spring.content.big.add.user.surname = Enter your surname:
spring.content.big.add.user.email = Enter your e-mail:
spring.content.big.add.user.name.placeholder = name
spring.content.big.add.user.surname.placeholder = surname
spring.content.big.add.user.email.placeholder = e-mail
spring.content.big.add.user.password = Enter password:
spring.content.big.add.user.password.placeholder = password
spring.content.big.add.user.password.repeat = Repeat password:
spring.content.big.add.user.password.repeat.placeholder = repeat password
spring.content.big.add.user.button = Register user account
validation.not.null = this field can not be empty
validation.name.size = first name must be 2 to 50 characters long
validation.surname.size = surname must be 2 to 50 characters long
validation.email.pattern = wrong pattern e-mail
validation.password.size = password must be 2 to 50 characters long
validation.password.and.password.repeat = Passwords are different
exception.database.no.result.found = can't find record in the database 
spring.content.big.title.error.constraint = Error related to database constraints
spring.content.error.constraint.strong = Error database.
spring.content.error.constraint.text = Database constraints violated. Use a different email address.
spring.content.big.title.error.optimistic = Database access error
spring.content.error.optimistic.strong = Application error.
spring.content.error.optimistic.text = You are working on data that has been modified in parallel.
spring.content.big.title.error.runtime = Error while running the application
spring.content.error.runtime.strong = Runtime error.
spring.content.error.runtime.text = An unexpected error occurred while the application was running, please contact support.
spring.content.big.title.error.http.forbidden = HTTP error  : 403
spring.content.error.http.forbidden.strong = HTTP error 403.
spring.content.error.http.forbidden.text = The server was unable to respond to this request. No proper authorization.
spring.content.big.title.error.http.notfound = HTTP error : 404
spring.content.error.http.ntofound.strong = HTTP error 404. 
spring.content.error.http.notfound.text = The requested resource does not exist. 
spring.content.big.title.error.http.conflict = HTTP error : 409
spring.content.error.http.conflict.strong = HTTP error 409.
spring.content.error.http.conflict.text = The request cannot be processed due to a conflict with the current resource state of the server.
spring.content.big.title.error.http.internal = HTTP error : 500
spring.content.error.http.internal.strong = HTTP error 500.
spring.content.error.http.internal.text = An unexpected application server error has occurred. 
spring.security.message.login.notfound = The user with the given login does not exist.
spring.message.user.added = Success! 
spring.message.user.added.text = User has been added
spring.message.user.dont.added = User adding error.
spring.message.user.dont.added.text = User registration failed.
spring.content.big.login.title = User login using Spring Security
spring.content.big.login.user.title = User authorization in the application
spring.content.big.login.user.email = Enter login:
spring.content.big.login.user.email.placeholder = loginem is your e-mail address
spring.content.big.login.user.button = Login
spring.content.login.user.error.strong = Login error. 
spring.content.login.user.error.text = The entered username or password is incorrect.
spring.content.info.login.strong = Logged in user: 
spring.content.info.login.roles = with permissions :
spring.menu.logout.user = Logout
spring.content.big.edit.user.button = Validate your details after editing
spring.content.user.notfound.error.strong = User account error
spring.content.user.notfound.error.text = No user account with such login was found in the database.
spring.content.edit.user.after.error.logout.user = Continue
spring.menu.edit.user = User edit
spring.message.user.edited = Operation finished.
spring.message.user.edited.text = Successful editing of personal data. 
spring.content.big.edit.user.title = Edit personal user data
spring.menu.delete.user = Delete your account
spring.content.big.delete.user.title = User account deletion panel
spring.content.big.delete.user.button = Confirm account deletion
spring.message.user.deleted = Operation finished. 
spring.message.user.deleted.text = Your account has been deleted and you has been logged out. 
spring.content.big.list.of.users.title = Administration panel to activate/deactivate accounts
spring.content.table.header.list.of.users.name = Name
spring.content.table.header.list.of.users.surname = Surname
spring.content.table.header.list.of.users.email = E-mail
spring.content.table.header.list.of.users.role = Account type 
spring.content.table.header.list.of.users.status = Account status
spring.menu.list.of.users = List of accounts
spring.content.account.status = Approved status